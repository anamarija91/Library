// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Library.Core.Model.Entities;

namespace Library.Infrastructure.EfModels
{
    public partial class LibraryContext : DbContext
    {
        public LibraryContext()
        {
        }

        public LibraryContext(DbContextOptions<LibraryContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BookCopy> BookCopy { get; set; }
        public virtual DbSet<BookTitle> BookTitle { get; set; }
        public virtual DbSet<Mrzdata> Mrzdata { get; set; }
        public virtual DbSet<Rental> Rental { get; set; }
        public virtual DbSet<User> User { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BookCopy>(entity =>
            {
                entity.ToTable("BookCopy", "Books");

                entity.HasIndex(e => e.BookTitleId)
                    .HasName("IXFK_BookCopy_BookTitle");

                entity.HasOne(d => d.BookTitle)
                    .WithMany(p => p.BookCopy)
                    .HasForeignKey(d => d.BookTitleId)
                    .HasConstraintName("FK_BookCopy_BookTitle");
            });

            modelBuilder.Entity<BookTitle>(entity =>
            {
                entity.ToTable("BookTitle", "Books");

                entity.Property(e => e.Author)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Mrzdata>(entity =>
            {
                entity.ToTable("MRZData", "Users");

                entity.Property(e => e.Dobvalid).HasColumnName("DOBValid");

                entity.Property(e => e.Doevalid).HasColumnName("DOEValid");

                entity.Property(e => e.FirstRow)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SecondRow)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdRow)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Rental>(entity =>
            {
                entity.ToTable("Rental", "Rentals");

                entity.HasIndex(e => e.BookCopyId)
                    .HasName("IXFK_Rental_BookCopy");

                entity.HasIndex(e => e.UserId)
                    .HasName("IXFK_Rental_User");

                entity.Property(e => e.DateDue).HasColumnType("date");

                entity.Property(e => e.DateRented).HasColumnType("date");

                entity.Property(e => e.DateReturned).HasColumnType("date");

                entity.HasOne(d => d.BookCopy)
                    .WithMany(p => p.Rental)
                    .HasForeignKey(d => d.BookCopyId)
                    .HasConstraintName("FK_Rental_BookCopy");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Rental)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_Rental_User");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("User", "Users");

                entity.HasIndex(e => e.MrzdataId)
                    .HasName("IXFK_User_MRZData");

                entity.Property(e => e.DateOfBirth).HasColumnType("date");

                entity.Property(e => e.Email)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.MrzdataId).HasColumnName("MRZDataId");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Mrzdata)
                    .WithMany(p => p.User)
                    .HasForeignKey(d => d.MrzdataId)
                    .HasConstraintName("FK_User_MRZData");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}